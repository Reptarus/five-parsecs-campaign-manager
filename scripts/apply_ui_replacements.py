#!/usr/bin/env python3
"""
UI Reference Updater for Five Parsecs Campaign Manager
This script updates references to UI files after reorganization.
Generated by find_ui_references.py
"""

import os
import re
import sys
import argparse
from pathlib import Path

def update_references(dry_run=False):
    """
    Update references to UI files.
    
    Args:
        dry_run (bool): If True, print changes but don't apply them
    """
    changes_made = 0
    
    # Dictionary of files to process with their replacements
    files_to_process = {
        "src\\scenes\\campaign\\CampaignUI.tscn": {
            r'path="res://src/ui/VictoryConditionSelection\.tscn"': 'path="res://src/ui/screens/campaign/setup/VictoryConditionSelection.tscn"',
        },
    }
    
    for file_path, patterns in files_to_process.items():
        if not os.path.exists(file_path):
            print(f"Warning: {file_path} no longer exists, skipping")
            continue
            
        try:
            with open(file_path, 'r', encoding='utf-8') as f:
                content = f.read()
                
            original_content = content
            
            for pattern, replacement in patterns.items():
                content = re.sub(pattern, replacement, content)
                
            if content != original_content:
                if dry_run:
                    print(f"Would update: {file_path}")
                    # Show diff
                    for line_num, (old_line, new_line) in enumerate(zip(
                            original_content.splitlines(), 
                            content.splitlines())):
                        if old_line != new_line:
                            print(f"  Line {line_num + 1}:")
                            print(f"    - {old_line}")
                            print(f"    + {new_line}")
                else:
                    with open(file_path, 'w', encoding='utf-8') as f:
                        f.write(content)
                    print(f"Updated: {file_path}")
                changes_made += 1
                
        except Exception as e:
            print(f"Error processing {file_path}: {e}")
            
    print(f"{'Would make' if dry_run else 'Made'} changes to {changes_made} files")
    return changes_made

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Update UI file references")
    parser.add_argument("--dry-run", action="store_true", 
                        help="Show changes without applying them")
    args = parser.parse_args()
    
    update_references(dry_run=args.dry_run)
